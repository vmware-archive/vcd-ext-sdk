# *************************************************************************
# * api-extension-template-vcloud-director
# * Copyright 2017-2018 VMware, Inc.  All rights reserved. *
# * SPDX-License-Identifier: BSD-2-Clause
# *************************************************************************
swagger: "2.0"
info:
  description: |
    The vCloud Director service API allows for querying specialized tasks/workflows etc. that a tenant
    may execute in their virtual datacenters.
  version: "1.0"
  title: vCloud Director Services API

paths:
  services:
    get:
      tags:
        - services
      summary: Get list of services
      description: |
        Get list of services
      operationId: queryServices
      parameters:
        - $ref: "./common/query.yaml#/parameters/queryFilter"
        - $ref: "./common/query.yaml#/parameters/querySortAsc"
        - $ref: "./common/query.yaml#/parameters/querySortDesc"
        - $ref: "./common/query.yaml#/parameters/queryPage"
        - $ref: "./common/query.yaml#/parameters/queryPageSize"
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "./common/query.yaml#/definitions/QueryResults"

    post:
      tags:
        - services
      summary: Creates a new service
      description: |
        Creates a new service
      operationId: createService
      consumes:
        - application/json
      parameters:
        - name: newService
          in: body
          required: true
          schema:
            $ref: "#/definitions/Service"
      produces:
        - application/json
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/Service"

  service:
    parameters:
      - name: id
        in: path
        required: true
        type: string
    get:
      tags:
        - services
      summary: Get specified service
      operationId: getService
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Service"
        404:
          description: Not Found
    put:
      tags:
        - services
      summary: Update specified service
      operationId: updateService
      consumes:
        - application/json
      parameters:
        - name: updatedService
          in: body
          required: true
          schema:
            $ref: "#/definitions/Service"
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Service"
    delete:
      tags:
        - services
      summary: Delete specified service
      operationId: deleteService
      responses:
        204:
          description: No Content

  service-items:
    get:
      tags:
        - services
      summary: Get all items across all services
      operationId: queryServiceItems
      parameters:
        - $ref: "./common/query.yaml#/parameters/queryFilter"
        - $ref: "./common/query.yaml#/parameters/querySortAsc"
        - $ref: "./common/query.yaml#/parameters/querySortDesc"
        - $ref: "./common/query.yaml#/parameters/queryPage"
        - $ref: "./common/query.yaml#/parameters/queryPageSize"
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "./common/query.yaml#/definitions/QueryResults"

    post:
      tags:
        - services
      summary: Adds service item
      description: |
        Adds service items to the service
      operationId: addServiceItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: newServiceItems
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceItem'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceItem'

  service-item:
    parameters:
      - name: id
        in: path
        required: true
        type: string
    get:
      tags:
        - services
      summary: Get the specified item
      operationId: getServiceItem
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ServiceItem"
        404:
          description: Not Found

    put:
      tags:
        - services
      summary: Update specified service item
      operationId: updateServiceItem
      consumes:
        - application/json
      parameters:
        - name: updatedService
          in: body
          required: true
          schema:
            $ref: "#/definitions/ServiceItem"
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ServiceItem"

    delete:
      tags:
        - services
      summary: Deletes specified service item
      description: |
        Deletes specified service item
      operationId: deleteServiceItem
      responses:
        204:
          description: No Content

  #BEGIN temporary codegen placeholder - to enforce generation of referred VroWorkflowServiceItem
  workflow-items:
    parameters:
      - name: id
        in: path
        required: true
        type: string
    get:
      tags:
        - services
      summary: Get all workflow items in this service
      operationId: getWorkflowServiceItems
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: './vro/vro.yaml#/definitions/VroWorkflowServiceItem'
  #END temporary codegen placeholder - to enforce generation of referred VroWorkflowServiceItem

    post:
      tags:
        - services
      summary: Add VRO remote workflows to this service
      operationId: importVroWorkflows
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: remoteWorkflows
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: './vro/vro.yaml#/definitions/VroRemoteWorkflowItem'

      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceItem'
        404:
          description: Not Found

  service-item-tenants:
    parameters:
      - name: id
        in: path
        required: true
        type: string

    get:
      tags:
        - services
      summary: Retrieves list of tenants for whom the service item is explicitly published
      description: |
        Retrieves list of item for whom the service library is explicitly published
      operationId: getServiceItemTenants
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EntityReference'

  service-item-tenants-publish:
    parameters:
      - name: id
        in: path
        required: true
        type: string
    post:
      tags:
        - services
      summary: Publishes the service item to the specified tenants
      description: |
        Publishes the service item to the specified tenants
      operationId: postServiceItemPublish
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: publishTenantsBody
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/EntityReference'

      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EntityReference'

  service-item-tenants-unpublish:
    parameters:
      - name: id
        in: path
        required: true
        type: string
    post:
      tags:
        - services
      summary: Revokes publication of the service item to the specified tenants
      description: |
        Revokes publication of the service item to the specified tenants
      operationId: postServiceItemUnpublish
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: unpublishTenantsBody
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/EntityReference'

      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EntityReference'

  service-item-tenants-publish-all:
    parameters:
      - name: id
        in: path
        required: true
        type: string
    post:
      tags:
        - services
      summary: Publishes the service item to all tenants
      description: |
        Publishes the service item to all tenants
      operationId: postServiceItemPublishAll
      produces:
        - application/json

      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EntityReference'

  service-item-tenants-unpublish-all:
    parameters:
      - name: id
        in: path
        required: true
        type: string
    post:
      tags:
        - services
      summary: Unpublishes the service item from all tenants
      description: |
        Unpublishes the service item from all tenants
      operationId: postServiceItemUnpublishAll
      produces:
        - application/json

      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EntityReference'

definitions:
  ServiceItem:
    type: object
    discriminator: serviceItemType
    properties:
      id:
        type: string
      name:
        type: string
      serviceItemType:
        type: string
      description:
        type: string
      canExecute:
        type: boolean
      serviceName:
        type: string
      serviceId:
        type: string
      iconMimeType:
        type: string
      iconData:
        # Base64-encoded data string
        type: string
      tenantScoped:
        type: boolean
        default: true
      providerScoped:
        type: boolean
        default: false
    required:
      - serviceItemType

  Service:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
        default: ""
      iconMimeType:
        type: string
      iconData:
        # Base64-encoded data string
        type: string
      id:
        type: string
      serviceItems:
        type: array
        items:
          type: object
          oneOf:
            - $ref: "./vro/vro.yaml#/definitions/VroWorkflowServiceItem"
    required:
      - name
      - iconMimeType
      - iconData

  EntityReference:
    $ref: "./common/entity.yaml#/definitions/EntityReference"