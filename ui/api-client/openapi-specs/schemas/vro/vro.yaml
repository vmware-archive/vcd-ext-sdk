# *************************************************************************
# * api-extension-template-vcloud-director
# * Copyright 2017-2018 VMware, Inc.  All rights reserved. *
# * SPDX-License-Identifier: BSD-2-Clause
# *************************************************************************
swagger: "2.0"
info:
  description: |
    The vCloud Director - vRealize Orchestrator service integration allows for better workflow management in VCD employing VRO.
  version: "1.0"
  title: vRealize Orchestrator Integration API

paths:
  queryWorkflows:
    parameters:
      - name: vroServerId
        description: The ID of the server to browse workflows on
        in: path
        required: true
        type: string
    get:
      tags:
        - vrealizeWorkflows
      summary: Browse remote vRealize Orchestrator workflows
      operationId: getRemoteWorkflows
      parameters:
        - $ref: "./common/query.yaml#/parameters/queryFilter"
        - $ref: "./common/query.yaml#/parameters/querySortAsc"
        - $ref: "./common/query.yaml#/parameters/querySortDesc"
      produces:
       - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/VroRemoteWorkflowItem'
        404:
          description: Not Found

  vroInventory:
    parameters:
      - name: vroId
        description: The ID of the server to browse inventory items on
        in: path
        required: true
        type: string
      - name: any
        description: Inventory search path to identify the VRO inventory node to get contents of
        in: path
        required: false
        type: string
    get:
      tags:
        - vrealizeBrowse
      summary: Browse remote vRealize Orchestrator inventory
      operationId: getRemoteInventory
      produces:
       - application/json
      responses:
        200:
          description: OK
          schema:
              $ref: '#/definitions/VroRemoteInventoryItem'
        404:
          description: Not Found

  vroCatalogBase:
    parameters:
      - name: vroId
        description: The ID of the server to browse inventory items on
        in: path
        required: true
        type: string
    get:
      tags:
        - vrealizeBrowse
      summary: Browse remote vRealize Orchestrator inventory
      operationId: getRemoteCatalog
      parameters:
       - $ref: "./common/query.yaml#/parameters/queryFilter"
       - $ref: "./common/query.yaml#/parameters/querySortAsc"
       - $ref: "./common/query.yaml#/parameters/querySortDesc"
       - $ref: "./common/query.yaml#/parameters/queryPage"
       - $ref: "./common/query.yaml#/parameters/queryPageSize"
      produces:
       - application/json
      responses:
        200:
          description: OK
          schema:
              $ref: '#/definitions/VroRemoteInventoryItem'
        404:
          description: Not Found

  vroCatalogPlugin:
    parameters:
      - name: vroId
        description: The ID of the server to browse inventory items on
        in: path
        required: true
        type: string
      - name: plugin
        description: The name of the plugin to search within the catalog
        in: path
        required: true
        type: string
    get:
      tags:
        - vrealizeBrowse
      summary: Browse remote vRealize Orchestrator inventory
      operationId: getRemoteCatalogPlugin
      parameters:
       - $ref: "./common/query.yaml#/parameters/queryFilter"
       - $ref: "./common/query.yaml#/parameters/querySortAsc"
       - $ref: "./common/query.yaml#/parameters/querySortDesc"
       - $ref: "./common/query.yaml#/parameters/queryPage"
       - $ref: "./common/query.yaml#/parameters/queryPageSize"
      produces:
       - application/json
      responses:
        200:
          description: OK
          schema:
              $ref: '#/definitions/VroRemoteInventoryItem'
        404:
          description: Not Found

  vroCatalogPluginType:
    parameters:
      - name: vroId
        description: The ID of the server to browse inventory items on
        in: path
        required: true
        type: string
      - name: plugin
        description: The name of the plugin to search within the catalog
        in: path
        required: true
        type: string
      - name: type
        description: The datatype within the specified plugin
        in: path
        required: true
        type: string
    get:
      tags:
        - vrealizeBrowse
      summary: Browse remote vRealize Orchestrator inventory
      operationId: getRemoteCatalogPluginType
      parameters:
        - $ref: "./common/query.yaml#/parameters/queryFilter"
        - $ref: "./common/query.yaml#/parameters/querySortAsc"
        - $ref: "./common/query.yaml#/parameters/querySortDesc"
        - $ref: "./common/query.yaml#/parameters/queryPage"
        - $ref: "./common/query.yaml#/parameters/queryPageSize"
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
              $ref: './vro/vro-common.yaml#/definitions/Relations'
        404:
          description: Not Found

  vroCatalogPluginTypeItem:
    parameters:
      - name: vroId
        description: The ID of the server to browse inventory items on
        in: path
        required: true
        type: string
      - name: plugin
        description: The name of the plugin to search within the catalog
        in: path
        required: true
        type: string
      - name: type
        description: The datatype within the specified plugin
        in: path
        required: true
        type: string
      - name: itemId
        description: Id of the specific item within the plugin's type catalog
        in: path
        required: true
        type: string
    get:
      tags:
        - vrealizeBrowse
      summary: Browse remote vRealize Orchestrator inventory
      operationId: getRemoteCatalogPluginTypeItem
      parameters:
        - $ref: "./common/query.yaml#/parameters/queryFilter"
        - $ref: "./common/query.yaml#/parameters/querySortAsc"
        - $ref: "./common/query.yaml#/parameters/querySortDesc"
        - $ref: "./common/query.yaml#/parameters/queryPage"
        - $ref: "./common/query.yaml#/parameters/queryPageSize"
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
              $ref: '#/definitions/VroRemoteInventoryItem'
        404:
          description: Not Found

  vros:
    get:
      tags:
        - vRealizeOrchestrators
      summary: Get a list of registered vRealize Orchestrator services
      operationId: getRegisteredVROs
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/VROServiceInfo'

    post:
      tags:
        - vRealizeOrchestrators
      summary: Register a vRealize Orchestrator endpoint with vCloud Director
      operationId: register
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/VROServiceInfo'
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VROServiceInfo'
        400:
          description: Bad Request

  vro:
    parameters:
      - name: id
        in: path
        required: true
        type: string

    get:
      tags:
        - vRealizeOrchestrator
      summary: Retrieves service specific metadata for a vRealize Orchestrator
      operationId: getRegisteredVRO
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VROServiceInfo'

    put:
      tags:
        - vRealizeOrchestrator
      summary: Updates service specific metadata for a vRealize Orchestrator
      operationId: updateService
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/VROServiceInfo'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VROServiceInfo'

    patch:
      tags:
        - vRealizeOrchestrator
      summary: Updates service specific metadata for a vRealize Orchestrator
      operationId: patchService
      consumes:
        - application/merge-patch+json
        - application/json-patch+json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/VROServiceInfo'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VROServiceInfo'

    delete:
      tags:
        - vRealizeOrchestrator
      summary: Unregisters a vRealize Orchestrator endpoint from vCloud Director
      operationId: unregister
      responses:
        204:
          description: No Content

definitions:
  VroRemoteInventoryItem:
    description: |
      Meta information about an inventory item on a vRealize Orchestrator server
    type: object
    properties:
      href:
        type: string
      attributes:
        type: array
        items:
          $ref: './vro-common.yaml#/definitions/WsAttribute'
      relations:
        $ref: './vro-common.yaml#/definitions/Relations'

  VroRemoteWorkflowItem:
    description: |
      Meta information about a workflow on a vRealize Orchestrator server
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      categoryName:
        type: string
      canExecute:
        type: boolean
      id:
        type: string
      vroServerId:
        type: string

  VroWorkflowServiceItem:
    allOf:
      - $ref: "./services/services.yaml#/definitions/ServiceItem"
      - type: object
        properties:
          vroWorkflowId:
            type: string
          vroServerId:
            type: string
    required:
      - vroServerId
      - vroWorkflowId
      - serviceItemType

  VROServiceInfo:
    description: |
      Response type with meta information about a vRealize Orchestrator Service
    type: object
    properties:
      id:
        type: string
        description: |
          This is a read-only field in the client. Values set on this field will be ignored by the server.
      name:
        type: string
      description:
        type: string
      vroEndpoint:
        type: string
        format: uri
      username:
        type: string
      password:
        type: string
        description: |
           The password is hidden using a Password Mask represented by a series of 6 asterisks ("******") in the response.
           The Password Mask is not an acceptable password during VRO Server registration.
           During an update, the Password Mask set for the 'password' field is interpreted as no change to the field and is ignored.
        format: password
      version:
        type: string
      trustAnchor:
        description: |
          SSL Certificate chain for the VRO endpoint
        type: string