import { ResourceType } from "./../ResourceType";
import { SyslogServerSettingsType } from "./../SyslogServerSettingsType";
export declare class GeneralSettingsType extends ResourceType {
    absoluteSessionTimeoutMinutes?: number;
    activityLogDisplayDays?: number;
    activityLogKeepDays?: number;
    allowOverlappingExtNets?: boolean;
    chargebackEventsKeepDays?: number;
    chargebackTablesCleanupJobTimeInSeconds?: number;
    consoleProxyExternalAddress?: string;
    hostCheckDelayInSeconds?: number;
    hostCheckTimeoutSeconds?: number;
    installationId?: number;
    ipReservationTimeoutSeconds?: number;
    syslogServerSettings?: SyslogServerSettingsType;
    loginNameOnly?: boolean;
    prePopDefaultName?: boolean;
    quarantineEnabled?: boolean;
    quarantineResponseTimeoutSeconds?: number;
    restApiBaseHttpUri?: string;
    restApiBaseUri?: string;
    restApiBaseUriPublicCertChain?: string;
    sessionTimeoutMinutes?: number;
    showStackTraces?: boolean;
    syncStartDate?: Date;
    syncIntervalInHours?: number;
    systemExternalHttpAddress?: string;
    systemExternalAddress?: string;
    systemExternalAddressPublicCertChain?: string;
    tenantPortalExternalHttpAddress?: string;
    tenantPortalExternalAddress?: string;
    tenantPortalPublicCertChain?: string;
    transferSessionTimeoutSeconds?: number;
    verifyVcCertificates?: boolean;
    vcTruststorePassword?: string;
    vcTruststoreContents?: string[];
    vcTruststoreType?: string;
    vmrcVersion?: string;
    verifyVsmCertificates?: boolean;
    elasticAllocationPool?: boolean;
    advancedNetworkingEnabled?: boolean;
    advancedNetworkingDfwApiUrl?: string;
    advancedNetworkingDfwUiUrl?: string;
    advancedNetworkingGatewayApiUrl?: string;
    advancedNetworkingGatewayUiUrl?: string;
    maxVdcQuota?: number;
    subInterfacesEnabled?: boolean;
    vmDiscoveryEnabled?: boolean;
    allowFipsModeForEdgeGateways?: boolean;
}
export declare namespace GeneralSettingsType {
    class Fields extends ResourceType.Fields {
        static readonly ABSOLUTE_SESSION_TIMEOUT_MINUTES: "absoluteSessionTimeoutMinutes";
        static readonly ACTIVITY_LOG_DISPLAY_DAYS: "activityLogDisplayDays";
        static readonly ACTIVITY_LOG_KEEP_DAYS: "activityLogKeepDays";
        static readonly ALLOW_OVERLAPPING_EXT_NETS: "allowOverlappingExtNets";
        static readonly CHARGEBACK_EVENTS_KEEP_DAYS: "chargebackEventsKeepDays";
        static readonly CHARGEBACK_TABLES_CLEANUP_JOB_TIME_IN_SECONDS: "chargebackTablesCleanupJobTimeInSeconds";
        static readonly CONSOLE_PROXY_EXTERNAL_ADDRESS: "consoleProxyExternalAddress";
        static readonly HOST_CHECK_DELAY_IN_SECONDS: "hostCheckDelayInSeconds";
        static readonly HOST_CHECK_TIMEOUT_SECONDS: "hostCheckTimeoutSeconds";
        static readonly INSTALLATION_ID: "installationId";
        static readonly IP_RESERVATION_TIMEOUT_SECONDS: "ipReservationTimeoutSeconds";
        static readonly SYSLOG_SERVER_SETTINGS: "syslogServerSettings";
        static readonly LOGIN_NAME_ONLY: "loginNameOnly";
        static readonly PRE_POP_DEFAULT_NAME: "prePopDefaultName";
        static readonly QUARANTINE_ENABLED: "quarantineEnabled";
        static readonly QUARANTINE_RESPONSE_TIMEOUT_SECONDS: "quarantineResponseTimeoutSeconds";
        static readonly REST_API_BASE_HTTP_URI: "restApiBaseHttpUri";
        static readonly REST_API_BASE_URI: "restApiBaseUri";
        static readonly REST_API_BASE_URI_PUBLIC_CERT_CHAIN: "restApiBaseUriPublicCertChain";
        static readonly SESSION_TIMEOUT_MINUTES: "sessionTimeoutMinutes";
        static readonly SHOW_STACK_TRACES: "showStackTraces";
        static readonly SYNC_START_DATE: "syncStartDate";
        static readonly SYNC_INTERVAL_IN_HOURS: "syncIntervalInHours";
        static readonly SYSTEM_EXTERNAL_HTTP_ADDRESS: "systemExternalHttpAddress";
        static readonly SYSTEM_EXTERNAL_ADDRESS: "systemExternalAddress";
        static readonly SYSTEM_EXTERNAL_ADDRESS_PUBLIC_CERT_CHAIN: "systemExternalAddressPublicCertChain";
        static readonly TENANT_PORTAL_EXTERNAL_HTTP_ADDRESS: "tenantPortalExternalHttpAddress";
        static readonly TENANT_PORTAL_EXTERNAL_ADDRESS: "tenantPortalExternalAddress";
        static readonly TENANT_PORTAL_PUBLIC_CERT_CHAIN: "tenantPortalPublicCertChain";
        static readonly TRANSFER_SESSION_TIMEOUT_SECONDS: "transferSessionTimeoutSeconds";
        static readonly VERIFY_VC_CERTIFICATES: "verifyVcCertificates";
        static readonly VC_TRUSTSTORE_PASSWORD: "vcTruststorePassword";
        static readonly VC_TRUSTSTORE_CONTENTS: "vcTruststoreContents";
        static readonly VC_TRUSTSTORE_TYPE: "vcTruststoreType";
        static readonly VMRC_VERSION: "vmrcVersion";
        static readonly VERIFY_VSM_CERTIFICATES: "verifyVsmCertificates";
        static readonly ELASTIC_ALLOCATION_POOL: "elasticAllocationPool";
        static readonly ADVANCED_NETWORKING_ENABLED: "advancedNetworkingEnabled";
        static readonly ADVANCED_NETWORKING_DFW_API_URL: "advancedNetworkingDfwApiUrl";
        static readonly ADVANCED_NETWORKING_DFW_UI_URL: "advancedNetworkingDfwUiUrl";
        static readonly ADVANCED_NETWORKING_GATEWAY_API_URL: "advancedNetworkingGatewayApiUrl";
        static readonly ADVANCED_NETWORKING_GATEWAY_UI_URL: "advancedNetworkingGatewayUiUrl";
        static readonly MAX_VDC_QUOTA: "maxVdcQuota";
        static readonly SUB_INTERFACES_ENABLED: "subInterfacesEnabled";
        static readonly VM_DISCOVERY_ENABLED: "vmDiscoveryEnabled";
        static readonly ALLOW_FIPS_MODE_FOR_EDGE_GATEWAYS: "allowFipsModeForEdgeGateways";
    }
}
